Lmain(1) {
  MOVE(TEMP(t29), CALL(NAME(L_halloc), CONST(4)))
  MOVE(TEMP(t30), CALL(NAME(LFibAux$nfib_lazy), TEMP(t29), CONST(15)))
  MOVE(TEMP(t0), CALL(NAME(L_println_int), TEMP(t30)))
  MOVE(TEMP(t1), CONST(0))
  return t1
}

LFibAux$nfib(2) {
  CJUMP(LT, PARAM(1), CONST(2), L$0, L$1)
  LABEL(L$1)
  MOVE(TEMP(t31), CALL(NAME(LFibAux$nfib), PARAM(0), BINOP(PLUS, CONST(-1), PARAM(1))))
  MOVE(TEMP(t32), CALL(NAME(LFibAux$nfib), PARAM(0), BINOP(PLUS, CONST(-2), PARAM(1))))
  MOVE(TEMP(t2), BINOP(PLUS, CONST(1), BINOP(PLUS, TEMP(t31), TEMP(t32))))
  JUMP(NAME(L$2), L$2)
  LABEL(L$0)
  MOVE(TEMP(t2), CONST(1))
  LABEL(L$2)
  MOVE(TEMP(t3), TEMP(t2))
  return t3
}

LFibAux$nfib_lazy(2) {
  CJUMP(LT, PARAM(1), CONST(1), L$3, L$4)
  LABEL(L$4)
  MOVE(TEMP(t4), CONST(0))
  JUMP(NAME(L$5), L$5)
  LABEL(L$3)
  MOVE(TEMP(t4), CONST(0))
  LABEL(L$5)
  MOVE(TEMP(t6), CALL(NAME(L_halloc), CONST(8)))
  MOVE(TEMP(t5), CALL(NAME(LLazyArray$init), TEMP(t6), PARAM(1)))
  MOVE(TEMP(t4), CALL(NAME(LLazyArray$nfib), TEMP(t6), PARAM(1)))
  MOVE(TEMP(t7), TEMP(t4))
  return t7
}

LLazyArray$init(2) {
  MOVE(TEMP(t9), PARAM(1))
  MOVE(TEMP(t10), CALL(NAME(L_halloc), BINOP(MUL, BINOP(PLUS, TEMP(t9), CONST(1)), CONST(4))))
  MOVE(MEM(TEMP(t10)), TEMP(t9))
  MOVE(MEM(BINOP(PLUS, CONST(4), PARAM(0))), BINOP(PLUS, TEMP(t10), CONST(4)))
  MOVE(TEMP(t8), CONST(0))
  LABEL(L$6)
  CJUMP(LT, TEMP(t8), PARAM(1), L$7, L$8)
  LABEL(L$7)
  MOVE(TEMP(t11), MEM(BINOP(PLUS, CONST(4), PARAM(0))))
  CJUMP(LT, TEMP(t8), CONST(0), L$11, L$9)
  LABEL(L$9)
  CJUMP(LT, TEMP(t8), MEM(BINOP(PLUS, CONST(-4), TEMP(t11))), L$10, L$11)
  LABEL(L$11)
  MOVE(TEMP(t12), CALL(NAME(L_raise), CONST(0)))
  LABEL(L$10)
  MOVE(MEM(BINOP(PLUS, TEMP(t11), BINOP(MUL, TEMP(t8), CONST(4)))), CONST(0))
  MOVE(TEMP(t8), BINOP(PLUS, CONST(1), TEMP(t8)))
  JUMP(NAME(L$6), L$6)
  LABEL(L$8)
  MOVE(TEMP(t13), CONST(1))
  return t13
}

LLazyArray$defined(2) {
  CJUMP(LT, PARAM(1), CONST(0), L$15, L$16)
  LABEL(L$16)
  CJUMP(LT, CONST(0), PARAM(1), L$12, L$13)
  LABEL(L$13)
  MOVE(TEMP(t14), CONST(0))
  JUMP(NAME(L$14), L$14)
  LABEL(L$12)
  MOVE(TEMP(t14), CONST(1))
  LABEL(L$14)
  JUMP(NAME(L$17), L$17)
  LABEL(L$15)
  MOVE(TEMP(t14), CONST(1))
  LABEL(L$17)
  MOVE(TEMP(t15), TEMP(t14))
  return t15
}

LLazyArray$get(2) {
  CJUMP(LT, PARAM(1), CONST(1), L$18, L$19)
  LABEL(L$19)
  MOVE(TEMP(t18), CONST(0))
  JUMP(NAME(L$20), L$20)
  LABEL(L$18)
  MOVE(TEMP(t18), CONST(0))
  LABEL(L$20)
  MOVE(TEMP(t19), MEM(BINOP(PLUS, CONST(4), PARAM(0))))
  MOVE(TEMP(t20), PARAM(1))
  CJUMP(LT, TEMP(t20), CONST(0), L$23, L$21)
  LABEL(L$21)
  CJUMP(LT, TEMP(t20), MEM(BINOP(PLUS, CONST(-4), TEMP(t19))), L$22, L$23)
  LABEL(L$23)
  MOVE(TEMP(t21), CALL(NAME(L_raise), CONST(0)))
  LABEL(L$22)
  MOVE(TEMP(t16), MEM(BINOP(PLUS, TEMP(t19), BINOP(MUL, TEMP(t20), CONST(4)))))
  MOVE(TEMP(t33), CALL(NAME(LLazyArray$defined), PARAM(0), TEMP(t16)))
  CJUMP(EQ, TEMP(t33), CONST(0), L$28, L$27)
  LABEL(L$28)
  MOVE(TEMP(t17), CALL(NAME(LLazyArray$f), PARAM(0), PARAM(1)))
  MOVE(TEMP(t22), MEM(BINOP(PLUS, CONST(4), PARAM(0))))
  MOVE(TEMP(t23), PARAM(1))
  CJUMP(LT, TEMP(t23), CONST(0), L$26, L$24)
  LABEL(L$24)
  CJUMP(LT, TEMP(t23), MEM(BINOP(PLUS, CONST(-4), TEMP(t22))), L$25, L$26)
  LABEL(L$26)
  MOVE(TEMP(t24), CALL(NAME(L_raise), CONST(0)))
  LABEL(L$25)
  MOVE(MEM(BINOP(PLUS, TEMP(t22), BINOP(MUL, TEMP(t23), CONST(4)))), TEMP(t17))
  MOVE(TEMP(t18), TEMP(t17))
  JUMP(NAME(L$29), L$29)
  LABEL(L$27)
  MOVE(TEMP(t18), TEMP(t16))
  LABEL(L$29)
  MOVE(TEMP(t25), TEMP(t18))
  return t25
}

LLazyArray$f(2) {
  MOVE(TEMP(t26), CALL(NAME(LLazyArray$nfib), PARAM(0), PARAM(1)))
  return t26
}

LLazyArray$nfib(2) {
  CJUMP(LT, PARAM(1), CONST(2), L$30, L$31)
  LABEL(L$31)
  MOVE(TEMP(t34), CALL(NAME(LLazyArray$get), PARAM(0), BINOP(PLUS, CONST(-1), PARAM(1))))
  MOVE(TEMP(t35), CALL(NAME(LLazyArray$get), PARAM(0), BINOP(PLUS, CONST(-2), PARAM(1))))
  MOVE(TEMP(t27), BINOP(PLUS, CONST(1), BINOP(PLUS, TEMP(t34), TEMP(t35))))
  JUMP(NAME(L$32), L$32)
  LABEL(L$30)
  MOVE(TEMP(t27), CONST(1))
  LABEL(L$32)
  MOVE(TEMP(t28), TEMP(t27))
  return t28
}