Lmain(1) {
  MOVE(TEMP(t0), CALL(NAME(L_println_int), CALL(NAME(LTest$test), CALL(NAME(L_halloc), CONST(4)))))
  MOVE(TEMP(t1), CONST(0))
  return t1
}

LLabel$init(2) {
  SEQ(MOVE(MEM(BINOP(PLUS, CONST(4), PARAM(0))), PARAM(1)))
  MOVE(TEMP(t2), CONST(0))
  return t2
}

LLabel$label(1) {
  SEQ()
  MOVE(TEMP(t3), MEM(BINOP(PLUS, CONST(4), PARAM(0))))
  return t3
}

LLabel$eq(2) {
  SEQ(MOVE(TEMP(t4), CALL(NAME(LLabel$label), PARAM(1))))
  MOVE(TEMP(t8), ESEQ(SEQ(MOVE(TEMP(t7), ESEQ(SEQ(MOVE(TEMP(t5), CONST(1)), SEQ(CJUMP(LT, MEM(BINOP(PLUS, CONST(4), PARAM(0))), BINOP(PLUS, CONST(1), TEMP(t4)), L$0, L$1), SEQ(LABEL(L$1), SEQ(MOVE(TEMP(t5), CONST(0)), SEQ(LABEL(L$0), SEQ()))))), TEMP(t5))), SEQ(CJUMP(EQ, TEMP(t7), CONST(0), L$4, L$5), SEQ(LABEL(L$5), SEQ(MOVE(TEMP(t7), ESEQ(SEQ(MOVE(TEMP(t6), CONST(1)), SEQ(CJUMP(LT, TEMP(t4), BINOP(PLUS, CONST(1), MEM(BINOP(PLUS, CONST(4), PARAM(0)))), L$2, L$3), SEQ(LABEL(L$3), SEQ(MOVE(TEMP(t6), CONST(0)), SEQ(LABEL(L$2), SEQ()))))), TEMP(t6))), SEQ(LABEL(L$4), SEQ()))))), TEMP(t7)))
  return t8
}

LLabel$print(1) {
  SEQ(MOVE(TEMP(t9), CALL(NAME(L_println_int), MEM(BINOP(PLUS, CONST(4), PARAM(0))))))
  MOVE(TEMP(t10), CONST(0))
  return t10
}

LNode$init(2) {
  SEQ(MOVE(MEM(BINOP(PLUS, CONST(16), PARAM(0))), CONST(0)), MOVE(MEM(BINOP(PLUS, CONST(4), PARAM(0))), PARAM(1)), MOVE(MEM(BINOP(PLUS, CONST(8), PARAM(0))), PARAM(0)), MOVE(MEM(BINOP(PLUS, CONST(12), PARAM(0))), PARAM(0)))
  MOVE(TEMP(t11), CONST(0))
  return t11
}

LNode$label(1) {
  SEQ()
  MOVE(TEMP(t12), MEM(BINOP(PLUS, CONST(4), PARAM(0))))
  return t12
}

LNode$setLeft(2) {
  SEQ(MOVE(MEM(BINOP(PLUS, CONST(8), PARAM(0))), PARAM(1)))
  MOVE(TEMP(t13), CONST(0))
  return t13
}

LNode$setRight(2) {
  SEQ(MOVE(MEM(BINOP(PLUS, CONST(12), PARAM(0))), PARAM(1)))
  MOVE(TEMP(t14), CONST(0))
  return t14
}

LNode$print(1) {
  SEQ(MOVE(TEMP(t15), CALL(NAME(LLabel$print), MEM(BINOP(PLUS, CONST(4), PARAM(0))))))
  MOVE(TEMP(t16), CONST(0))
  return t16
}

LNode$beq(3) {
  SEQ()
  MOVE(TEMP(t20), BINOP(XOR, ESEQ(SEQ(MOVE(TEMP(t19), BINOP(XOR, ESEQ(SEQ(MOVE(TEMP(t17), PARAM(1)), SEQ(CJUMP(EQ, TEMP(t17), CONST(0), L$6, L$7), SEQ(LABEL(L$7), SEQ(MOVE(TEMP(t17), PARAM(2)), SEQ(LABEL(L$6), SEQ()))))), TEMP(t17)), CONST(1))), SEQ(CJUMP(EQ, TEMP(t19), CONST(0), L$10, L$11), SEQ(LABEL(L$11), SEQ(MOVE(TEMP(t19), BINOP(XOR, ESEQ(SEQ(MOVE(TEMP(t18), BINOP(XOR, PARAM(1), CONST(1))), SEQ(CJUMP(EQ, TEMP(t18), CONST(0), L$8, L$9), SEQ(LABEL(L$9), SEQ(MOVE(TEMP(t18), BINOP(XOR, PARAM(2), CONST(1))), SEQ(LABEL(L$8), SEQ()))))), TEMP(t18)), CONST(1))), SEQ(LABEL(L$10), SEQ()))))), TEMP(t19)), CONST(1)))
  return t20
}

LNode$dfs(3) {
  SEQ(SEQ(CJUMP(EQ, CALL(NAME(LNode$beq), PARAM(0), MEM(BINOP(PLUS, CONST(16), PARAM(0))), PARAM(1)), CONST(0), L$22, L$21), SEQ(LABEL(L$22), SEQ(SEQ(CJUMP(EQ, CALL(NAME(LLabel$eq), MEM(BINOP(PLUS, CONST(4), PARAM(0))), PARAM(2)), CONST(0), L$19, L$18), SEQ(LABEL(L$19), SEQ(MOVE(MEM(BINOP(PLUS, CONST(16), PARAM(0))), PARAM(1)), SEQ(CJUMP(EQ, CALL(NAME(LNode$dfs), MEM(BINOP(PLUS, CONST(8), PARAM(0))), PARAM(1), PARAM(2)), CONST(0), L$16, L$15), SEQ(LABEL(L$16), SEQ(CJUMP(EQ, CALL(NAME(LNode$dfs), MEM(BINOP(PLUS, CONST(12), PARAM(0))), PARAM(1), PARAM(2)), CONST(0), L$13, L$12), SEQ(LABEL(L$13), SEQ(MOVE(TEMP(t21), CONST(0)), SEQ(JUMP(NAME(L$14), L$14), SEQ(LABEL(L$12), SEQ(MOVE(TEMP(t21), CONST(1)), SEQ(LABEL(L$14), SEQ())))))), JUMP(NAME(L$17), L$17), SEQ(LABEL(L$15), SEQ(MOVE(TEMP(t21), CONST(1)), SEQ(LABEL(L$17), SEQ())))))), JUMP(NAME(L$20), L$20), SEQ(LABEL(L$18), SEQ(MOVE(TEMP(t21), CONST(1)), LABEL(L$20), SEQ()))))), JUMP(NAME(L$23), L$23), SEQ(LABEL(L$21), SEQ(MOVE(TEMP(t21), CONST(0)), LABEL(L$23), SEQ()))))))
  MOVE(TEMP(t22), TEMP(t21))
  return t22
}

LTest$newLabel(2) {
  SEQ(MOVE(TEMP(t24), CALL(NAME(L_halloc), CONST(8))), MOVE(TEMP(t23), CALL(NAME(LLabel$init), TEMP(t24), PARAM(1))))
  MOVE(TEMP(t25), TEMP(t24))
  return t25
}

LTest$newNode(2) {
  SEQ(MOVE(TEMP(t27), CALL(NAME(L_halloc), CONST(20))), MOVE(TEMP(t26), CALL(NAME(LNode$init), TEMP(t27), PARAM(1))))
  MOVE(TEMP(t28), TEMP(t27))
  return t28
}

LTest$findPath(3) {
  SEQ(MOVE(TEMP(t29), CALL(NAME(LNode$print), PARAM(1))), MOVE(TEMP(t29), CALL(NAME(LNode$print), PARAM(2))), MOVE(TEMP(t30), CALL(NAME(LNode$dfs), PARAM(1), CONST(1), CALL(NAME(LNode$label), PARAM(2)))), MOVE(TEMP(t31), CALL(NAME(LNode$dfs), PARAM(1), CONST(0), CALL(NAME(LNode$label), PARAM(2)))), SEQ(CJUMP(EQ, TEMP(t30), CONST(0), L$25, L$24), SEQ(LABEL(L$25), SEQ(MOVE(TEMP(t33), CALL(NAME(L_println_int), CONST(-999))), SEQ(JUMP(NAME(L$26), L$26), SEQ(LABEL(L$24), SEQ(MOVE(TEMP(t32), CALL(NAME(L_println_int), CONST(999))), SEQ(LABEL(L$26), SEQ()))))))))
  MOVE(TEMP(t34), CONST(0))
  return t34
}

LTest$test(1) {
  SEQ(MOVE(TEMP(t38), CALL(NAME(LTest$newLabel), PARAM(0), CONST(1))), MOVE(TEMP(t39), CALL(NAME(LTest$newNode), PARAM(0), TEMP(t38))), MOVE(TEMP(t40), CALL(NAME(LTest$newLabel), PARAM(0), CONST(2))), MOVE(TEMP(t41), CALL(NAME(LTest$newNode), PARAM(0), TEMP(t40))), MOVE(TEMP(t42), CALL(NAME(LTest$newLabel), PARAM(0), CONST(3))), MOVE(TEMP(t43), CALL(NAME(LTest$newNode), PARAM(0), TEMP(t42))), MOVE(TEMP(t44), CALL(NAME(LTest$newLabel), PARAM(0), CONST(4))), MOVE(TEMP(t45), CALL(NAME(LTest$newNode), PARAM(0), TEMP(t44))), MOVE(TEMP(t46), CALL(NAME(LTest$newLabel), PARAM(0), CONST(5))), MOVE(TEMP(t47), CALL(NAME(LTest$newNode), PARAM(0), TEMP(t46))), MOVE(TEMP(t35), CALL(NAME(LNode$setLeft), TEMP(t39), TEMP(t41))), MOVE(TEMP(t35), CALL(NAME(LNode$setRight), TEMP(t39), TEMP(t45))), MOVE(TEMP(t35), CALL(NAME(LNode$setLeft), TEMP(t41), TEMP(t43))), MOVE(TEMP(t35), CALL(NAME(LNode$setLeft), TEMP(t43), TEMP(t39))), MOVE(TEMP(t35), CALL(NAME(LNode$setRight), TEMP(t43), TEMP(t45))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t39), TEMP(t45))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t45), TEMP(t39))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t43), TEMP(t41))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t45), TEMP(t39))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t43), TEMP(t41))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t45), TEMP(t43))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t47), TEMP(t47))), MOVE(TEMP(t35), CALL(NAME(LTest$findPath), PARAM(0), TEMP(t47), TEMP(t45))))
  MOVE(TEMP(t48), CONST(0))
  return t48
}